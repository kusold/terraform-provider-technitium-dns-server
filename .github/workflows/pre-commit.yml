name: Pre-commit Checks

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  pre-commit:
    name: Pre-commit Hooks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Setup Python for pre-commit
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: "3.13"

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - name: Install Go tools
        run: |
          go install golang.org/x/tools/cmd/goimports@latest

      - name: Cache pre-commit hooks
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-

      - name: Run pre-commit hooks
        run: pre-commit run --all-files --show-diff-on-failure --color=always
        env:
          SKIP: task-lint

  format-check:
    name: Go Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Setup Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - name: Check Go formatting
        run: |
          # Run task fmt to format code
          task fmt

          # Check if there are any changes
          if ! git diff --quiet --exit-code; then
            echo "❌ Code is not properly formatted"
            echo "Files that need formatting:"
            git diff --name-only
            echo ""
            echo "Run 'task fmt' to fix formatting issues"
            exit 1
          else
            echo "✅ Code is properly formatted"
          fi

  lint-check:
    name: Go Lint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Setup Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: latest
          args: --timeout=5m
